from textwrap import wrap
from time import time

import pytest
import pytest_asyncio
from starkware.starknet.testing.contract import DeclaredClass, StarknetContract
from starkware.starknet.testing.starknet import Starknet


@pytest_asyncio.fixture(scope="module")
async def zk_evm(
    starknet: Starknet, eth: StarknetContract, contract_account_class: DeclaredClass
):
    start = time()
    _zk_evm = await starknet.deploy(
        source="./src/kakarot/kakarot.cairo",
        cairo_path=["src"],
        disable_hint_validation=True,
        constructor_calldata=[
            1,
            eth.contract_address,
            contract_account_class.class_hash,
        ],
    )
    evm_time = time()
    print(f"\nzkEVM deployed in {evm_time - start:.2f}s")
    return _zk_evm


@pytest_asyncio.fixture(scope="module", autouse=True)
async def set_account_registry(zk_evm, account_registry):
    await account_registry.transfer_ownership(zk_evm.contract_address).execute(
        caller_address=1
    )
    await zk_evm.set_account_registry(
        registry_address_=account_registry.contract_address
    ).execute(caller_address=1)
    yield
    await account_registry.transfer_ownership(1).execute(
        caller_address=zk_evm.contract_address
    )




test_cases = [
    {
        "params": {
            "code": "608060405234801561001057600080fd5b5060405161080d38038061080d83398101604081905261002f91610197565b815161004290600090602085019061005e565b50805161005690600190602084019061005e565b505050610248565b82805461006a906101f7565b90600052602060002090601f01602090048101928261008c57600085556100d2565b82601f106100a557805160ff19168380011785556100d2565b828001600101855582156100d2579182015b828111156100d25782518255916020019190600101906100b7565b506100de9291506100e2565b5090565b5b808211156100de57600081556001016100e3565b600082601f830112610107578081fd5b81516001600160401b038082111561012157610121610232565b6040516020601f8401601f191682018101838111838210171561014657610146610232565b604052838252858401810187101561015c578485fd5b8492505b8383101561017d5785830181015182840182015291820191610160565b8383111561018d57848185840101525b5095945050505050565b600080604083850312156101a9578182fd5b82516001600160401b03808211156101bf578384fd5b6101cb868387016100f7565b935060208501519150808211156101e0578283fd5b506101ed858286016100f7565b9150509250929050565b60028104600182168061020b57607f821691505b6020821081141561022c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6105b6806102576000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806340c10f191161006657806340c10f19146100fe57806370a082311461011357806395d89b4114610126578063a9059cbb1461012e578063dd62ed3e1461014157610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d657806323b872dd146100eb575b600080fd5b6100a0610154565b6040516100ad91906104a4565b60405180910390f35b6100c96100c4366004610470565b6101e2565b6040516100ad9190610499565b6100de61024c565b6040516100ad91906104f7565b6100c96100f9366004610435565b610252565b61011161010c366004610470565b610304565b005b6100de6101213660046103e2565b61033d565b6100a061034f565b6100c961013c366004610470565b61035c565b6100de61014f366004610403565b6103a9565b600080546101619061052f565b80601f016020809104026020016040519081016040528092919081815260200182805461018d9061052f565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061023b9086906104f7565b60405180910390a350600192915050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146102ae576102898382610518565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906102d6908490610518565b9091555050506001600160a01b03831660009081526003602052604090208054830190555060019392505050565b80600260008282546103169190610500565b90915550506001600160a01b03909116600090815260036020526040902080549091019055565b60036020526000908152604090205481565b600180546101619061052f565b3360009081526003602052604081208054839190839061037d908490610518565b9091555050506001600160a01b0382166000908152600360205260409020805482019055600192915050565b600460209081526000928352604080842090915290825290205481565b80356001600160a01b03811681146103dd57600080fd5b919050565b6000602082840312156103f3578081fd5b6103fc826103c6565b9392505050565b60008060408385031215610415578081fd5b61041e836103c6565b915061042c602084016103c6565b90509250929050565b600080600060608486031215610449578081fd5b610452846103c6565b9250610460602085016103c6565b9150604084013590509250925092565b60008060408385031215610482578182fd5b61048b836103c6565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156104d0578581018301518582016040015282016104b4565b818111156104e15783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b600082198211156105135761051361056a565b500190565b60008282101561052a5761052a61056a565b500390565b60028104600182168061054357607f821691505b6020821081141561056457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204e53876a7abf080ce7b38dffe1572ec4843a83c565efd2feeb856984b5af6fb764736f6c634300080000330000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000074b616b61726f74000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003534a4e0000000000000000000000000000000000000000000000000000000000",
            "mint": "40c10f1900000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000164", 
            "approve": "18160ddd",
            "transferFrom": "23b872dd000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000064",
            "balanceOf": "70a082310000000000000000000000000000000000000000000000000000000000000001",
            "stack": "",
            "memory": "",
            "return_value": "",
        },
        "id": "solmate_erc20_totalSupply",
    },
    {
        "params": {
            "code": "608060405234801561001057600080fd5b5060405161080d38038061080d83398101604081905261002f91610197565b815161004290600090602085019061005e565b50805161005690600190602084019061005e565b505050610248565b82805461006a906101f7565b90600052602060002090601f01602090048101928261008c57600085556100d2565b82601f106100a557805160ff19168380011785556100d2565b828001600101855582156100d2579182015b828111156100d25782518255916020019190600101906100b7565b506100de9291506100e2565b5090565b5b808211156100de57600081556001016100e3565b600082601f830112610107578081fd5b81516001600160401b038082111561012157610121610232565b6040516020601f8401601f191682018101838111838210171561014657610146610232565b604052838252858401810187101561015c578485fd5b8492505b8383101561017d5785830181015182840182015291820191610160565b8383111561018d57848185840101525b5095945050505050565b600080604083850312156101a9578182fd5b82516001600160401b03808211156101bf578384fd5b6101cb868387016100f7565b935060208501519150808211156101e0578283fd5b506101ed858286016100f7565b9150509250929050565b60028104600182168061020b57607f821691505b6020821081141561022c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6105b6806102576000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806340c10f191161006657806340c10f19146100fe57806370a082311461011357806395d89b4114610126578063a9059cbb1461012e578063dd62ed3e1461014157610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d657806323b872dd146100eb575b600080fd5b6100a0610154565b6040516100ad91906104a4565b60405180910390f35b6100c96100c4366004610470565b6101e2565b6040516100ad9190610499565b6100de61024c565b6040516100ad91906104f7565b6100c96100f9366004610435565b610252565b61011161010c366004610470565b610304565b005b6100de6101213660046103e2565b61033d565b6100a061034f565b6100c961013c366004610470565b61035c565b6100de61014f366004610403565b6103a9565b600080546101619061052f565b80601f016020809104026020016040519081016040528092919081815260200182805461018d9061052f565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061023b9086906104f7565b60405180910390a350600192915050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146102ae576102898382610518565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906102d6908490610518565b9091555050506001600160a01b03831660009081526003602052604090208054830190555060019392505050565b80600260008282546103169190610500565b90915550506001600160a01b03909116600090815260036020526040902080549091019055565b60036020526000908152604090205481565b600180546101619061052f565b3360009081526003602052604081208054839190839061037d908490610518565b9091555050506001600160a01b0382166000908152600360205260409020805482019055600192915050565b600460209081526000928352604080842090915290825290205481565b80356001600160a01b03811681146103dd57600080fd5b919050565b6000602082840312156103f3578081fd5b6103fc826103c6565b9392505050565b60008060408385031215610415578081fd5b61041e836103c6565b915061042c602084016103c6565b90509250929050565b600080600060608486031215610449578081fd5b610452846103c6565b9250610460602085016103c6565b9150604084013590509250925092565b60008060408385031215610482578182fd5b61048b836103c6565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156104d0578581018301518582016040015282016104b4565b818111156104e15783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b600082198211156105135761051361056a565b500190565b60008282101561052a5761052a61056a565b500390565b60028104600182168061054357607f821691505b6020821081141561056457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204e53876a7abf080ce7b38dffe1572ec4843a83c565efd2feeb856984b5af6fb764736f6c634300080000330000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000074b616b61726f74000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003534a4e0000000000000000000000000000000000000000000000000000000000",
            "mint": "40c10f1900000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000164", 
            "approve": "095ea7b3000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000f4240",
            "transferFrom": "23b872dd000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000064",
            "balanceOf": "70a082310000000000000000000000000000000000000000000000000000000000000001",
            "stack": "",
            "memory": "",
            "return_value": "",
        },
        "id": "solmate_erc20_transferFrom",
    },
    {
        "params": {
            "code": "608060405234801561001057600080fd5b5060405161080d38038061080d83398101604081905261002f91610197565b815161004290600090602085019061005e565b50805161005690600190602084019061005e565b505050610248565b82805461006a906101f7565b90600052602060002090601f01602090048101928261008c57600085556100d2565b82601f106100a557805160ff19168380011785556100d2565b828001600101855582156100d2579182015b828111156100d25782518255916020019190600101906100b7565b506100de9291506100e2565b5090565b5b808211156100de57600081556001016100e3565b600082601f830112610107578081fd5b81516001600160401b038082111561012157610121610232565b6040516020601f8401601f191682018101838111838210171561014657610146610232565b604052838252858401810187101561015c578485fd5b8492505b8383101561017d5785830181015182840182015291820191610160565b8383111561018d57848185840101525b5095945050505050565b600080604083850312156101a9578182fd5b82516001600160401b03808211156101bf578384fd5b6101cb868387016100f7565b935060208501519150808211156101e0578283fd5b506101ed858286016100f7565b9150509250929050565b60028104600182168061020b57607f821691505b6020821081141561022c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6105b6806102576000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806340c10f191161006657806340c10f19146100fe57806370a082311461011357806395d89b4114610126578063a9059cbb1461012e578063dd62ed3e1461014157610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d657806323b872dd146100eb575b600080fd5b6100a0610154565b6040516100ad91906104a4565b60405180910390f35b6100c96100c4366004610470565b6101e2565b6040516100ad9190610499565b6100de61024c565b6040516100ad91906104f7565b6100c96100f9366004610435565b610252565b61011161010c366004610470565b610304565b005b6100de6101213660046103e2565b61033d565b6100a061034f565b6100c961013c366004610470565b61035c565b6100de61014f366004610403565b6103a9565b600080546101619061052f565b80601f016020809104026020016040519081016040528092919081815260200182805461018d9061052f565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061023b9086906104f7565b60405180910390a350600192915050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146102ae576102898382610518565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906102d6908490610518565b9091555050506001600160a01b03831660009081526003602052604090208054830190555060019392505050565b80600260008282546103169190610500565b90915550506001600160a01b03909116600090815260036020526040902080549091019055565b60036020526000908152604090205481565b600180546101619061052f565b3360009081526003602052604081208054839190839061037d908490610518565b9091555050506001600160a01b0382166000908152600360205260409020805482019055600192915050565b600460209081526000928352604080842090915290825290205481565b80356001600160a01b03811681146103dd57600080fd5b919050565b6000602082840312156103f3578081fd5b6103fc826103c6565b9392505050565b60008060408385031215610415578081fd5b61041e836103c6565b915061042c602084016103c6565b90509250929050565b600080600060608486031215610449578081fd5b610452846103c6565b9250610460602085016103c6565b9150604084013590509250925092565b60008060408385031215610482578182fd5b61048b836103c6565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156104d0578581018301518582016040015282016104b4565b818111156104e15783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b600082198211156105135761051361056a565b500190565b60008282101561052a5761052a61056a565b500390565b60028104600182168061054357607f821691505b6020821081141561056457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204e53876a7abf080ce7b38dffe1572ec4843a83c565efd2feeb856984b5af6fb764736f6c634300080000330000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000074b616b61726f74000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003534a4e0000000000000000000000000000000000000000000000000000000000",
            "calldata": "40c10f1900000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000064",
            "calldata2": "a9059cbb000000000000000000000000d770134156f9ab742fdb4561a684187f733a9586000000000000000000000000000000000000000000000000000000000000000a",
            "calldata3": "70a08231000000000000000000000000d770134156f9ab742fdb4561a684187f733a9586",
            "stack": "",
            "memory": "",
            "return_value": "",
        },
        "id": "solmate_erc20_transfer",
    },

    {
        "params": {
            "code": "608060405234801561001057600080fd5b5060405161080d38038061080d83398101604081905261002f91610197565b815161004290600090602085019061005e565b50805161005690600190602084019061005e565b505050610248565b82805461006a906101f7565b90600052602060002090601f01602090048101928261008c57600085556100d2565b82601f106100a557805160ff19168380011785556100d2565b828001600101855582156100d2579182015b828111156100d25782518255916020019190600101906100b7565b506100de9291506100e2565b5090565b5b808211156100de57600081556001016100e3565b600082601f830112610107578081fd5b81516001600160401b038082111561012157610121610232565b6040516020601f8401601f191682018101838111838210171561014657610146610232565b604052838252858401810187101561015c578485fd5b8492505b8383101561017d5785830181015182840182015291820191610160565b8383111561018d57848185840101525b5095945050505050565b600080604083850312156101a9578182fd5b82516001600160401b03808211156101bf578384fd5b6101cb868387016100f7565b935060208501519150808211156101e0578283fd5b506101ed858286016100f7565b9150509250929050565b60028104600182168061020b57607f821691505b6020821081141561022c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6105b6806102576000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806340c10f191161006657806340c10f19146100fe57806370a082311461011357806395d89b4114610126578063a9059cbb1461012e578063dd62ed3e1461014157610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d657806323b872dd146100eb575b600080fd5b6100a0610154565b6040516100ad91906104a4565b60405180910390f35b6100c96100c4366004610470565b6101e2565b6040516100ad9190610499565b6100de61024c565b6040516100ad91906104f7565b6100c96100f9366004610435565b610252565b61011161010c366004610470565b610304565b005b6100de6101213660046103e2565b61033d565b6100a061034f565b6100c961013c366004610470565b61035c565b6100de61014f366004610403565b6103a9565b600080546101619061052f565b80601f016020809104026020016040519081016040528092919081815260200182805461018d9061052f565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061023b9086906104f7565b60405180910390a350600192915050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146102ae576102898382610518565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906102d6908490610518565b9091555050506001600160a01b03831660009081526003602052604090208054830190555060019392505050565b80600260008282546103169190610500565b90915550506001600160a01b03909116600090815260036020526040902080549091019055565b60036020526000908152604090205481565b600180546101619061052f565b3360009081526003602052604081208054839190839061037d908490610518565b9091555050506001600160a01b0382166000908152600360205260409020805482019055600192915050565b600460209081526000928352604080842090915290825290205481565b80356001600160a01b03811681146103dd57600080fd5b919050565b6000602082840312156103f3578081fd5b6103fc826103c6565b9392505050565b60008060408385031215610415578081fd5b61041e836103c6565b915061042c602084016103c6565b90509250929050565b600080600060608486031215610449578081fd5b610452846103c6565b9250610460602085016103c6565b9150604084013590509250925092565b60008060408385031215610482578182fd5b61048b836103c6565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156104d0578581018301518582016040015282016104b4565b818111156104e15783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b600082198211156105135761051361056a565b500190565b60008282101561052a5761052a61056a565b500390565b60028104600182168061054357607f821691505b6020821081141561056457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204e53876a7abf080ce7b38dffe1572ec4843a83c565efd2feeb856984b5af6fb764736f6c634300080000330000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000074b616b61726f74000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003534a4e0000000000000000000000000000000000000000000000000000000000",
            "calldata": "095ea7b3000000000000000000000000d770134156f9ab742fdb4561a684187f733a958600000000000000000000000000000000000000000000000000000000000f4240",
            "calldata2": "dd62ed3e0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000d770134156f9ab742fdb4561a684187f733a9586",
            "stack": "",
            "memory": "",
            "return_value": "",
        },
        "id": "solmate_erc20_approve",
    },
    {
        "params": {
            "code": "608060405234801561001057600080fd5b5060405161080d38038061080d83398101604081905261002f91610197565b815161004290600090602085019061005e565b50805161005690600190602084019061005e565b505050610248565b82805461006a906101f7565b90600052602060002090601f01602090048101928261008c57600085556100d2565b82601f106100a557805160ff19168380011785556100d2565b828001600101855582156100d2579182015b828111156100d25782518255916020019190600101906100b7565b506100de9291506100e2565b5090565b5b808211156100de57600081556001016100e3565b600082601f830112610107578081fd5b81516001600160401b038082111561012157610121610232565b6040516020601f8401601f191682018101838111838210171561014657610146610232565b604052838252858401810187101561015c578485fd5b8492505b8383101561017d5785830181015182840182015291820191610160565b8383111561018d57848185840101525b5095945050505050565b600080604083850312156101a9578182fd5b82516001600160401b03808211156101bf578384fd5b6101cb868387016100f7565b935060208501519150808211156101e0578283fd5b506101ed858286016100f7565b9150509250929050565b60028104600182168061020b57607f821691505b6020821081141561022c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6105b6806102576000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806340c10f191161006657806340c10f19146100fe57806370a082311461011357806395d89b4114610126578063a9059cbb1461012e578063dd62ed3e1461014157610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d657806323b872dd146100eb575b600080fd5b6100a0610154565b6040516100ad91906104a4565b60405180910390f35b6100c96100c4366004610470565b6101e2565b6040516100ad9190610499565b6100de61024c565b6040516100ad91906104f7565b6100c96100f9366004610435565b610252565b61011161010c366004610470565b610304565b005b6100de6101213660046103e2565b61033d565b6100a061034f565b6100c961013c366004610470565b61035c565b6100de61014f366004610403565b6103a9565b600080546101619061052f565b80601f016020809104026020016040519081016040528092919081815260200182805461018d9061052f565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061023b9086906104f7565b60405180910390a350600192915050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146102ae576102898382610518565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906102d6908490610518565b9091555050506001600160a01b03831660009081526003602052604090208054830190555060019392505050565b80600260008282546103169190610500565b90915550506001600160a01b03909116600090815260036020526040902080549091019055565b60036020526000908152604090205481565b600180546101619061052f565b3360009081526003602052604081208054839190839061037d908490610518565b9091555050506001600160a01b0382166000908152600360205260409020805482019055600192915050565b600460209081526000928352604080842090915290825290205481565b80356001600160a01b03811681146103dd57600080fd5b919050565b6000602082840312156103f3578081fd5b6103fc826103c6565b9392505050565b60008060408385031215610415578081fd5b61041e836103c6565b915061042c602084016103c6565b90509250929050565b600080600060608486031215610449578081fd5b610452846103c6565b9250610460602085016103c6565b9150604084013590509250925092565b60008060408385031215610482578182fd5b61048b836103c6565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156104d0578581018301518582016040015282016104b4565b818111156104e15783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b600082198211156105135761051361056a565b500190565b60008282101561052a5761052a61056a565b500390565b60028104600182168061054357607f821691505b6020821081141561056457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204e53876a7abf080ce7b38dffe1572ec4843a83c565efd2feeb856984b5af6fb764736f6c634300080000330000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000074b616b61726f74000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003534a4e0000000000000000000000000000000000000000000000000000000000",
            "calldata": "40c10f19000000000000000000000000d770134156f9ab742fdb4561a684187f733a95860000000000000000000000000000000000000000000000000000000000002710",
            "calldata2": "70a08231000000000000000000000000d770134156f9ab742fdb4561a684187f733a9586",
            "stack": "",
            "memory": "",
            "return_value": "",
        },
        "id": "solmate_erc20_mint",
    },
    {
        "params": {
            "code": "608060405234801561001057600080fd5b5060405161080d38038061080d83398101604081905261002f91610197565b815161004290600090602085019061005e565b50805161005690600190602084019061005e565b505050610248565b82805461006a906101f7565b90600052602060002090601f01602090048101928261008c57600085556100d2565b82601f106100a557805160ff19168380011785556100d2565b828001600101855582156100d2579182015b828111156100d25782518255916020019190600101906100b7565b506100de9291506100e2565b5090565b5b808211156100de57600081556001016100e3565b600082601f830112610107578081fd5b81516001600160401b038082111561012157610121610232565b6040516020601f8401601f191682018101838111838210171561014657610146610232565b604052838252858401810187101561015c578485fd5b8492505b8383101561017d5785830181015182840182015291820191610160565b8383111561018d57848185840101525b5095945050505050565b600080604083850312156101a9578182fd5b82516001600160401b03808211156101bf578384fd5b6101cb868387016100f7565b935060208501519150808211156101e0578283fd5b506101ed858286016100f7565b9150509250929050565b60028104600182168061020b57607f821691505b6020821081141561022c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6105b6806102576000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806340c10f191161006657806340c10f19146100fe57806370a082311461011357806395d89b4114610126578063a9059cbb1461012e578063dd62ed3e1461014157610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d657806323b872dd146100eb575b600080fd5b6100a0610154565b6040516100ad91906104a4565b60405180910390f35b6100c96100c4366004610470565b6101e2565b6040516100ad9190610499565b6100de61024c565b6040516100ad91906104f7565b6100c96100f9366004610435565b610252565b61011161010c366004610470565b610304565b005b6100de6101213660046103e2565b61033d565b6100a061034f565b6100c961013c366004610470565b61035c565b6100de61014f366004610403565b6103a9565b600080546101619061052f565b80601f016020809104026020016040519081016040528092919081815260200182805461018d9061052f565b80156101da5780601f106101af576101008083540402835291602001916101da565b820191906000526020600020905b8154815290600101906020018083116101bd57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061023b9086906104f7565b60405180910390a350600192915050565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146102ae576102898382610518565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906102d6908490610518565b9091555050506001600160a01b03831660009081526003602052604090208054830190555060019392505050565b80600260008282546103169190610500565b90915550506001600160a01b03909116600090815260036020526040902080549091019055565b60036020526000908152604090205481565b600180546101619061052f565b3360009081526003602052604081208054839190839061037d908490610518565b9091555050506001600160a01b0382166000908152600360205260409020805482019055600192915050565b600460209081526000928352604080842090915290825290205481565b80356001600160a01b03811681146103dd57600080fd5b919050565b6000602082840312156103f3578081fd5b6103fc826103c6565b9392505050565b60008060408385031215610415578081fd5b61041e836103c6565b915061042c602084016103c6565b90509250929050565b600080600060608486031215610449578081fd5b610452846103c6565b9250610460602085016103c6565b9150604084013590509250925092565b60008060408385031215610482578182fd5b61048b836103c6565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156104d0578581018301518582016040015282016104b4565b818111156104e15783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b600082198211156105135761051361056a565b500190565b60008282101561052a5761052a61056a565b500390565b60028104600182168061054357607f821691505b6020821081141561056457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212204e53876a7abf080ce7b38dffe1572ec4843a83c565efd2feeb856984b5af6fb764736f6c634300080000330000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000074b616b61726f74000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003534a4e0000000000000000000000000000000000000000000000000000000000",
            "calldata": "40c10f1900000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000064",
            "calldata2": "70a082310000000000000000000000006daab0f26f9efc44718fcfb2e90291e19b2f81ce",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000042",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000042",
        },
        "id": "solmate_erc20_transferFrom",
    },
    {
        "params": {
            "code": "608060405234801561001057600080fd5b5060405160208061021783398101604090815290516000818155338152600160205291909120556101d1806100466000396000f3006080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166318160ddd811461005b57806370a0823114610082578063a9059cbb146100b0575b600080fd5b34801561006757600080fd5b506100706100f5565b60408051918252519081900360200190f35b34801561008e57600080fd5b5061007073ffffffffffffffffffffffffffffffffffffffff600435166100fb565b3480156100bc57600080fd5b506100e173ffffffffffffffffffffffffffffffffffffffff60043516602435610123565b604080519115158252519081900360200190f35b60005490565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b600073ffffffffffffffffffffffffffffffffffffffff8316151561014757600080fd5b3360009081526001602052604090205482111561016357600080fd5b503360009081526001602081905260408083208054859003905573ffffffffffffffffffffffffffffffffffffffff85168352909120805483019055929150505600a165627a7a72305820a5d999f4459642872a29be93a490575d345e40fc91a7cccb2cf29c88bcdaf3be00290000000000000000000000000000000000000000000000000000000000002710",
            "calldata": "0x095ea7b3000000000000000000000000d770134156f9ab742fdb4561a684187f733a958600000000000000000000000000000000000000000000000000000000000f4240",
            "calldata2": "70a082310000000000000000000000000000000000000000000000000000000000000002",
            "calldata3" : "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000042",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000042",
        },
        "id": "constructor_test_erc20_transfer",
    },
    {
        "params": {
            "code": "60806040523480156200001157600080fd5b506040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b000000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000412565b508060049081620000a1919062000412565b505050620000c4620000b8620000ca60201b60201c565b620000d260201b60201c565b620004f9565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200021a57607f821691505b60208210810362000230576200022f620001d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200029a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200025b565b620002a686836200025b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002f3620002ed620002e784620002be565b620002c8565b620002be565b9050919050565b6000819050919050565b6200030f83620002d2565b620003276200031e82620002fa565b84845462000268565b825550505050565b600090565b6200033e6200032f565b6200034b81848462000304565b505050565b5b8181101562000373576200036760008262000334565b60018101905062000351565b5050565b601f821115620003c2576200038c8162000236565b62000397846200024b565b81016020851015620003a7578190505b620003bf620003b6856200024b565b83018262000350565b50505b505050565b600082821c905092915050565b6000620003e760001984600802620003c7565b1980831691505092915050565b6000620004028383620003d4565b9150826002028217905092915050565b6200041d8262000198565b67ffffffffffffffff811115620004395762000438620001a3565b5b62000445825462000201565b6200045282828562000377565b600060209050601f8311600181146200048a576000841562000475578287015190505b620004818582620003f4565b865550620004f1565b601f1984166200049a8662000236565b60005b82811015620004c4578489015182556001820191506020850194506020810190506200049d565b86831015620004e45784890151620004e0601f891682620003d4565b8355505b6001600288020188555050505b505050505050565b6117f280620005096000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b806370a0823114610200578063715018a6146102305780638da5cb5b1461023a57806395d89b4114610258576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190610f3b565b60405180910390f35b610132600480360381019061012d9190610ff6565b6103b4565b60405161013f9190611051565b60405180910390f35b6101506103d7565b60405161015d919061107b565b60405180910390f35b610180600480360381019061017b9190611096565b6103e1565b60405161018d9190611051565b60405180910390f35b61019e610410565b6040516101ab9190611105565b60405180910390f35b6101ce60048036038101906101c99190610ff6565b610419565b6040516101db9190611051565b60405180910390f35b6101fe60048036038101906101f99190610ff6565b610450565b005b61021a60048036038101906102159190611120565b610466565b604051610227919061107b565b60405180910390f35b6102386104ae565b005b6102426104c2565b60405161024f919061115c565b60405180910390f35b6102606104ec565b60405161026d9190610f3b565b60405180910390f35b610290600480360381019061028b9190610ff6565b61057e565b60405161029d9190611051565b60405180910390f35b6102c060048036038101906102bb9190610ff6565b6105f5565b6040516102cd9190611051565b60405180910390f35b6102f060048036038101906102eb9190611177565b610618565b6040516102fd919061107b565b60405180910390f35b610320600480360381019061031b9190611120565b61069f565b005b606060038054610331906111e6565b80601f016020809104026020016040519081016040528092919081815260200182805461035d906111e6565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf610722565b90506103cc81858561072a565b600191505092915050565b6000600254905090565b6000806103ec610722565b90506103f98582856108f3565b61040485858561097f565b60019150509392505050565b60006012905090565b600080610424610722565b90506104458185856104368589610618565b6104409190611246565b61072a565b600191505092915050565b610458610bfe565b6104628282610c7c565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104b6610bfe565b6104c06000610ddb565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104fb906111e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610527906111e6565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b600080610589610722565b905060006105978286610618565b9050838110156105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d3906112ec565b60405180910390fd5b6105e9828686840361072a565b60019250505092915050565b600080610600610722565b905061060d81858561097f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106a7610bfe565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d9061137e565b60405180910390fd5b61071f81610ddb565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079090611410565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff906114a2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e6919061107b565b60405180910390a3505050565b60006108ff8484610618565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610979578181101561096b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109629061150e565b60405180910390fd5b610978848484840361072a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e5906115a0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490611632565b60405180910390fd5b610a68838383610ea1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae5906116c4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b819190611246565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610be5919061107b565b60405180910390a3610bf8848484610ea6565b50505050565b610c06610722565b73ffffffffffffffffffffffffffffffffffffffff16610c246104c2565b73ffffffffffffffffffffffffffffffffffffffff1614610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190611730565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ceb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce29061179c565b60405180910390fd5b610cf760008383610ea1565b8060026000828254610d099190611246565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d5e9190611246565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dc3919061107b565b60405180910390a3610dd760008383610ea6565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ee5578082015181840152602081019050610eca565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f0d82610eab565b610f178185610eb6565b9350610f27818560208601610ec7565b610f3081610ef1565b840191505092915050565b60006020820190508181036000830152610f558184610f02565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8d82610f62565b9050919050565b610f9d81610f82565b8114610fa857600080fd5b50565b600081359050610fba81610f94565b92915050565b6000819050919050565b610fd381610fc0565b8114610fde57600080fd5b50565b600081359050610ff081610fca565b92915050565b6000806040838503121561100d5761100c610f5d565b5b600061101b85828601610fab565b925050602061102c85828601610fe1565b9150509250929050565b60008115159050919050565b61104b81611036565b82525050565b60006020820190506110666000830184611042565b92915050565b61107581610fc0565b82525050565b6000602082019050611090600083018461106c565b92915050565b6000806000606084860312156110af576110ae610f5d565b5b60006110bd86828701610fab565b93505060206110ce86828701610fab565b92505060406110df86828701610fe1565b9150509250925092565b600060ff82169050919050565b6110ff816110e9565b82525050565b600060208201905061111a60008301846110f6565b92915050565b60006020828403121561113657611135610f5d565b5b600061114484828501610fab565b91505092915050565b61115681610f82565b82525050565b6000602082019050611171600083018461114d565b92915050565b6000806040838503121561118e5761118d610f5d565b5b600061119c85828601610fab565b92505060206111ad85828601610fab565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111fe57607f821691505b602082108103611211576112106111b7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061125182610fc0565b915061125c83610fc0565b925082820190508082111561127457611273611217565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112d6602583610eb6565b91506112e18261127a565b604082019050919050565b60006020820190508181036000830152611305816112c9565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611368602683610eb6565b91506113738261130c565b604082019050919050565b600060208201905081810360008301526113978161135b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113fa602483610eb6565b91506114058261139e565b604082019050919050565b60006020820190508181036000830152611429816113ed565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061148c602283610eb6565b915061149782611430565b604082019050919050565b600060208201905081810360008301526114bb8161147f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114f8601d83610eb6565b9150611503826114c2565b602082019050919050565b60006020820190508181036000830152611527816114eb565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061158a602583610eb6565b91506115958261152e565b604082019050919050565b600060208201905081810360008301526115b98161157d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061161c602383610eb6565b9150611627826115c0565b604082019050919050565b6000602082019050818103600083015261164b8161160f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116ae602683610eb6565b91506116b982611652565b604082019050919050565b600060208201905081810360008301526116dd816116a1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061171a602083610eb6565b9150611725826116e4565b602082019050919050565b600060208201905081810360008301526117498161170d565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611786601f83610eb6565b915061179182611750565b602082019050919050565b600060208201905081810360008301526117b581611779565b905091905056fea2646970667358221220bfbef0c1f7cf4bbe1eba5f71ec3b37b21ddcecca20257c6ba779c9ef65a13c1b64736f6c63430008110033",
            "calldata": "40c10f190000000000000000000000006daab0f26f9efc44718fcfb2e90291e19b2f81ce0000000000000000000000000000000000000000000000000000000000002710",
            "calldata2": "0xa9059cbb000000000000000000000000d770134156f9ab742fdb4561a684187f733a9586000000000000000000000000000000000000000000000000000000000000000a",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000042",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000042",
        },
        "id": "full_erc20_approve",
    },
    {
        "params": {
            "code": "60806040523480156200001157600080fd5b506040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b000000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000412565b508060049081620000a1919062000412565b505050620000c4620000b8620000ca60201b60201c565b620000d260201b60201c565b620004f9565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200021a57607f821691505b60208210810362000230576200022f620001d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200029a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200025b565b620002a686836200025b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002f3620002ed620002e784620002be565b620002c8565b620002be565b9050919050565b6000819050919050565b6200030f83620002d2565b620003276200031e82620002fa565b84845462000268565b825550505050565b600090565b6200033e6200032f565b6200034b81848462000304565b505050565b5b8181101562000373576200036760008262000334565b60018101905062000351565b5050565b601f821115620003c2576200038c8162000236565b62000397846200024b565b81016020851015620003a7578190505b620003bf620003b6856200024b565b83018262000350565b50505b505050565b600082821c905092915050565b6000620003e760001984600802620003c7565b1980831691505092915050565b6000620004028383620003d4565b9150826002028217905092915050565b6200041d8262000198565b67ffffffffffffffff811115620004395762000438620001a3565b5b62000445825462000201565b6200045282828562000377565b600060209050601f8311600181146200048a576000841562000475578287015190505b620004818582620003f4565b865550620004f1565b601f1984166200049a8662000236565b60005b82811015620004c4578489015182556001820191506020850194506020810190506200049d565b86831015620004e45784890151620004e0601f891682620003d4565b8355505b6001600288020188555050505b505050505050565b6117f280620005096000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b806370a0823114610200578063715018a6146102305780638da5cb5b1461023a57806395d89b4114610258576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190610f3b565b60405180910390f35b610132600480360381019061012d9190610ff6565b6103b4565b60405161013f9190611051565b60405180910390f35b6101506103d7565b60405161015d919061107b565b60405180910390f35b610180600480360381019061017b9190611096565b6103e1565b60405161018d9190611051565b60405180910390f35b61019e610410565b6040516101ab9190611105565b60405180910390f35b6101ce60048036038101906101c99190610ff6565b610419565b6040516101db9190611051565b60405180910390f35b6101fe60048036038101906101f99190610ff6565b610450565b005b61021a60048036038101906102159190611120565b610466565b604051610227919061107b565b60405180910390f35b6102386104ae565b005b6102426104c2565b60405161024f919061115c565b60405180910390f35b6102606104ec565b60405161026d9190610f3b565b60405180910390f35b610290600480360381019061028b9190610ff6565b61057e565b60405161029d9190611051565b60405180910390f35b6102c060048036038101906102bb9190610ff6565b6105f5565b6040516102cd9190611051565b60405180910390f35b6102f060048036038101906102eb9190611177565b610618565b6040516102fd919061107b565b60405180910390f35b610320600480360381019061031b9190611120565b61069f565b005b606060038054610331906111e6565b80601f016020809104026020016040519081016040528092919081815260200182805461035d906111e6565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf610722565b90506103cc81858561072a565b600191505092915050565b6000600254905090565b6000806103ec610722565b90506103f98582856108f3565b61040485858561097f565b60019150509392505050565b60006012905090565b600080610424610722565b90506104458185856104368589610618565b6104409190611246565b61072a565b600191505092915050565b610458610bfe565b6104628282610c7c565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104b6610bfe565b6104c06000610ddb565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104fb906111e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610527906111e6565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b600080610589610722565b905060006105978286610618565b9050838110156105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d3906112ec565b60405180910390fd5b6105e9828686840361072a565b60019250505092915050565b600080610600610722565b905061060d81858561097f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106a7610bfe565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d9061137e565b60405180910390fd5b61071f81610ddb565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079090611410565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff906114a2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e6919061107b565b60405180910390a3505050565b60006108ff8484610618565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610979578181101561096b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109629061150e565b60405180910390fd5b610978848484840361072a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e5906115a0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490611632565b60405180910390fd5b610a68838383610ea1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae5906116c4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b819190611246565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610be5919061107b565b60405180910390a3610bf8848484610ea6565b50505050565b610c06610722565b73ffffffffffffffffffffffffffffffffffffffff16610c246104c2565b73ffffffffffffffffffffffffffffffffffffffff1614610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190611730565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ceb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce29061179c565b60405180910390fd5b610cf760008383610ea1565b8060026000828254610d099190611246565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d5e9190611246565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dc3919061107b565b60405180910390a3610dd760008383610ea6565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ee5578082015181840152602081019050610eca565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f0d82610eab565b610f178185610eb6565b9350610f27818560208601610ec7565b610f3081610ef1565b840191505092915050565b60006020820190508181036000830152610f558184610f02565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8d82610f62565b9050919050565b610f9d81610f82565b8114610fa857600080fd5b50565b600081359050610fba81610f94565b92915050565b6000819050919050565b610fd381610fc0565b8114610fde57600080fd5b50565b600081359050610ff081610fca565b92915050565b6000806040838503121561100d5761100c610f5d565b5b600061101b85828601610fab565b925050602061102c85828601610fe1565b9150509250929050565b60008115159050919050565b61104b81611036565b82525050565b60006020820190506110666000830184611042565b92915050565b61107581610fc0565b82525050565b6000602082019050611090600083018461106c565b92915050565b6000806000606084860312156110af576110ae610f5d565b5b60006110bd86828701610fab565b93505060206110ce86828701610fab565b92505060406110df86828701610fe1565b9150509250925092565b600060ff82169050919050565b6110ff816110e9565b82525050565b600060208201905061111a60008301846110f6565b92915050565b60006020828403121561113657611135610f5d565b5b600061114484828501610fab565b91505092915050565b61115681610f82565b82525050565b6000602082019050611171600083018461114d565b92915050565b6000806040838503121561118e5761118d610f5d565b5b600061119c85828601610fab565b92505060206111ad85828601610fab565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111fe57607f821691505b602082108103611211576112106111b7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061125182610fc0565b915061125c83610fc0565b925082820190508082111561127457611273611217565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112d6602583610eb6565b91506112e18261127a565b604082019050919050565b60006020820190508181036000830152611305816112c9565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611368602683610eb6565b91506113738261130c565b604082019050919050565b600060208201905081810360008301526113978161135b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113fa602483610eb6565b91506114058261139e565b604082019050919050565b60006020820190508181036000830152611429816113ed565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061148c602283610eb6565b915061149782611430565b604082019050919050565b600060208201905081810360008301526114bb8161147f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114f8601d83610eb6565b9150611503826114c2565b602082019050919050565b60006020820190508181036000830152611527816114eb565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061158a602583610eb6565b91506115958261152e565b604082019050919050565b600060208201905081810360008301526115b98161157d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061161c602383610eb6565b9150611627826115c0565b604082019050919050565b6000602082019050818103600083015261164b8161160f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116ae602683610eb6565b91506116b982611652565b604082019050919050565b600060208201905081810360008301526116dd816116a1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061171a602083610eb6565b9150611725826116e4565b602082019050919050565b600060208201905081810360008301526117498161170d565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611786601f83610eb6565b915061179182611750565b602082019050919050565b600060208201905081810360008301526117b581611779565b905091905056fea2646970667358221220bfbef0c1f7cf4bbe1eba5f71ec3b37b21ddcecca20257c6ba779c9ef65a13c1b64736f6c63430008110033",
            "calldata": "40c10f190000000000000000000000006daab0f26f9efc44718fcfb2e90291e19b2f81ce0000000000000000000000000000000000000000000000000000000000002710",
            "calldata2": "70a082310000000000000000000000006daab0f26f9efc44718fcfb2e90291e19b2f81ce",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000042",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000042",
        },
        "id": "full_erc20_transfer_from",
    },
    {
        "params": {
            "code": "60806040523480156200001157600080fd5b506040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b000000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000412565b508060049081620000a1919062000412565b505050620000c4620000b8620000ca60201b60201c565b620000d260201b60201c565b620004f9565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200021a57607f821691505b60208210810362000230576200022f620001d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200029a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200025b565b620002a686836200025b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002f3620002ed620002e784620002be565b620002c8565b620002be565b9050919050565b6000819050919050565b6200030f83620002d2565b620003276200031e82620002fa565b84845462000268565b825550505050565b600090565b6200033e6200032f565b6200034b81848462000304565b505050565b5b8181101562000373576200036760008262000334565b60018101905062000351565b5050565b601f821115620003c2576200038c8162000236565b62000397846200024b565b81016020851015620003a7578190505b620003bf620003b6856200024b565b83018262000350565b50505b505050565b600082821c905092915050565b6000620003e760001984600802620003c7565b1980831691505092915050565b6000620004028383620003d4565b9150826002028217905092915050565b6200041d8262000198565b67ffffffffffffffff811115620004395762000438620001a3565b5b62000445825462000201565b6200045282828562000377565b600060209050601f8311600181146200048a576000841562000475578287015190505b620004818582620003f4565b865550620004f1565b601f1984166200049a8662000236565b60005b82811015620004c4578489015182556001820191506020850194506020810190506200049d565b86831015620004e45784890151620004e0601f891682620003d4565b8355505b6001600288020188555050505b505050505050565b6117f280620005096000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b806370a0823114610200578063715018a6146102305780638da5cb5b1461023a57806395d89b4114610258576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190610f3b565b60405180910390f35b610132600480360381019061012d9190610ff6565b6103b4565b60405161013f9190611051565b60405180910390f35b6101506103d7565b60405161015d919061107b565b60405180910390f35b610180600480360381019061017b9190611096565b6103e1565b60405161018d9190611051565b60405180910390f35b61019e610410565b6040516101ab9190611105565b60405180910390f35b6101ce60048036038101906101c99190610ff6565b610419565b6040516101db9190611051565b60405180910390f35b6101fe60048036038101906101f99190610ff6565b610450565b005b61021a60048036038101906102159190611120565b610466565b604051610227919061107b565b60405180910390f35b6102386104ae565b005b6102426104c2565b60405161024f919061115c565b60405180910390f35b6102606104ec565b60405161026d9190610f3b565b60405180910390f35b610290600480360381019061028b9190610ff6565b61057e565b60405161029d9190611051565b60405180910390f35b6102c060048036038101906102bb9190610ff6565b6105f5565b6040516102cd9190611051565b60405180910390f35b6102f060048036038101906102eb9190611177565b610618565b6040516102fd919061107b565b60405180910390f35b610320600480360381019061031b9190611120565b61069f565b005b606060038054610331906111e6565b80601f016020809104026020016040519081016040528092919081815260200182805461035d906111e6565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf610722565b90506103cc81858561072a565b600191505092915050565b6000600254905090565b6000806103ec610722565b90506103f98582856108f3565b61040485858561097f565b60019150509392505050565b60006012905090565b600080610424610722565b90506104458185856104368589610618565b6104409190611246565b61072a565b600191505092915050565b610458610bfe565b6104628282610c7c565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104b6610bfe565b6104c06000610ddb565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104fb906111e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610527906111e6565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b600080610589610722565b905060006105978286610618565b9050838110156105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d3906112ec565b60405180910390fd5b6105e9828686840361072a565b60019250505092915050565b600080610600610722565b905061060d81858561097f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106a7610bfe565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d9061137e565b60405180910390fd5b61071f81610ddb565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079090611410565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff906114a2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e6919061107b565b60405180910390a3505050565b60006108ff8484610618565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610979578181101561096b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109629061150e565b60405180910390fd5b610978848484840361072a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e5906115a0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490611632565b60405180910390fd5b610a68838383610ea1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae5906116c4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b819190611246565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610be5919061107b565b60405180910390a3610bf8848484610ea6565b50505050565b610c06610722565b73ffffffffffffffffffffffffffffffffffffffff16610c246104c2565b73ffffffffffffffffffffffffffffffffffffffff1614610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190611730565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ceb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce29061179c565b60405180910390fd5b610cf760008383610ea1565b8060026000828254610d099190611246565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d5e9190611246565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dc3919061107b565b60405180910390a3610dd760008383610ea6565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ee5578082015181840152602081019050610eca565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f0d82610eab565b610f178185610eb6565b9350610f27818560208601610ec7565b610f3081610ef1565b840191505092915050565b60006020820190508181036000830152610f558184610f02565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8d82610f62565b9050919050565b610f9d81610f82565b8114610fa857600080fd5b50565b600081359050610fba81610f94565b92915050565b6000819050919050565b610fd381610fc0565b8114610fde57600080fd5b50565b600081359050610ff081610fca565b92915050565b6000806040838503121561100d5761100c610f5d565b5b600061101b85828601610fab565b925050602061102c85828601610fe1565b9150509250929050565b60008115159050919050565b61104b81611036565b82525050565b60006020820190506110666000830184611042565b92915050565b61107581610fc0565b82525050565b6000602082019050611090600083018461106c565b92915050565b6000806000606084860312156110af576110ae610f5d565b5b60006110bd86828701610fab565b93505060206110ce86828701610fab565b92505060406110df86828701610fe1565b9150509250925092565b600060ff82169050919050565b6110ff816110e9565b82525050565b600060208201905061111a60008301846110f6565b92915050565b60006020828403121561113657611135610f5d565b5b600061114484828501610fab565b91505092915050565b61115681610f82565b82525050565b6000602082019050611171600083018461114d565b92915050565b6000806040838503121561118e5761118d610f5d565b5b600061119c85828601610fab565b92505060206111ad85828601610fab565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111fe57607f821691505b602082108103611211576112106111b7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061125182610fc0565b915061125c83610fc0565b925082820190508082111561127457611273611217565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112d6602583610eb6565b91506112e18261127a565b604082019050919050565b60006020820190508181036000830152611305816112c9565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611368602683610eb6565b91506113738261130c565b604082019050919050565b600060208201905081810360008301526113978161135b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113fa602483610eb6565b91506114058261139e565b604082019050919050565b60006020820190508181036000830152611429816113ed565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061148c602283610eb6565b915061149782611430565b604082019050919050565b600060208201905081810360008301526114bb8161147f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114f8601d83610eb6565b9150611503826114c2565b602082019050919050565b60006020820190508181036000830152611527816114eb565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061158a602583610eb6565b91506115958261152e565b604082019050919050565b600060208201905081810360008301526115b98161157d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061161c602383610eb6565b9150611627826115c0565b604082019050919050565b6000602082019050818103600083015261164b8161160f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116ae602683610eb6565b91506116b982611652565b604082019050919050565b600060208201905081810360008301526116dd816116a1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061171a602083610eb6565b9150611725826116e4565b602082019050919050565b600060208201905081810360008301526117498161170d565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611786601f83610eb6565b915061179182611750565b602082019050919050565b600060208201905081810360008301526117b581611779565b905091905056fea2646970667358221220bfbef0c1f7cf4bbe1eba5f71ec3b37b21ddcecca20257c6ba779c9ef65a13c1b64736f6c63430008110033",
            "calldata": "0x06fdde03",
            "calldata2": "0x95d89b41",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000042",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000042",
        },
        "id": "full_erc20_name",
    },
    {
        "params": {
            "code": "60806040523480156200001157600080fd5b506040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b000000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000412565b508060049081620000a1919062000412565b505050620000c4620000b8620000ca60201b60201c565b620000d260201b60201c565b620004f9565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200021a57607f821691505b60208210810362000230576200022f620001d2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200029a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200025b565b620002a686836200025b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002f3620002ed620002e784620002be565b620002c8565b620002be565b9050919050565b6000819050919050565b6200030f83620002d2565b620003276200031e82620002fa565b84845462000268565b825550505050565b600090565b6200033e6200032f565b6200034b81848462000304565b505050565b5b8181101562000373576200036760008262000334565b60018101905062000351565b5050565b601f821115620003c2576200038c8162000236565b62000397846200024b565b81016020851015620003a7578190505b620003bf620003b6856200024b565b83018262000350565b50505b505050565b600082821c905092915050565b6000620003e760001984600802620003c7565b1980831691505092915050565b6000620004028383620003d4565b9150826002028217905092915050565b6200041d8262000198565b67ffffffffffffffff811115620004395762000438620001a3565b5b62000445825462000201565b6200045282828562000377565b600060209050601f8311600181146200048a576000841562000475578287015190505b620004818582620003f4565b865550620004f1565b601f1984166200049a8662000236565b60005b82811015620004c4578489015182556001820191506020850194506020810190506200049d565b86831015620004e45784890151620004e0601f891682620003d4565b8355505b6001600288020188555050505b505050505050565b6117f280620005096000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b806370a0823114610200578063715018a6146102305780638da5cb5b1461023a57806395d89b4114610258576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190610f3b565b60405180910390f35b610132600480360381019061012d9190610ff6565b6103b4565b60405161013f9190611051565b60405180910390f35b6101506103d7565b60405161015d919061107b565b60405180910390f35b610180600480360381019061017b9190611096565b6103e1565b60405161018d9190611051565b60405180910390f35b61019e610410565b6040516101ab9190611105565b60405180910390f35b6101ce60048036038101906101c99190610ff6565b610419565b6040516101db9190611051565b60405180910390f35b6101fe60048036038101906101f99190610ff6565b610450565b005b61021a60048036038101906102159190611120565b610466565b604051610227919061107b565b60405180910390f35b6102386104ae565b005b6102426104c2565b60405161024f919061115c565b60405180910390f35b6102606104ec565b60405161026d9190610f3b565b60405180910390f35b610290600480360381019061028b9190610ff6565b61057e565b60405161029d9190611051565b60405180910390f35b6102c060048036038101906102bb9190610ff6565b6105f5565b6040516102cd9190611051565b60405180910390f35b6102f060048036038101906102eb9190611177565b610618565b6040516102fd919061107b565b60405180910390f35b610320600480360381019061031b9190611120565b61069f565b005b606060038054610331906111e6565b80601f016020809104026020016040519081016040528092919081815260200182805461035d906111e6565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf610722565b90506103cc81858561072a565b600191505092915050565b6000600254905090565b6000806103ec610722565b90506103f98582856108f3565b61040485858561097f565b60019150509392505050565b60006012905090565b600080610424610722565b90506104458185856104368589610618565b6104409190611246565b61072a565b600191505092915050565b610458610bfe565b6104628282610c7c565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104b6610bfe565b6104c06000610ddb565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104fb906111e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610527906111e6565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b600080610589610722565b905060006105978286610618565b9050838110156105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d3906112ec565b60405180910390fd5b6105e9828686840361072a565b60019250505092915050565b600080610600610722565b905061060d81858561097f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106a7610bfe565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d9061137e565b60405180910390fd5b61071f81610ddb565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079090611410565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff906114a2565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e6919061107b565b60405180910390a3505050565b60006108ff8484610618565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610979578181101561096b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109629061150e565b60405180910390fd5b610978848484840361072a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e5906115a0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490611632565b60405180910390fd5b610a68838383610ea1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae5906116c4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b819190611246565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610be5919061107b565b60405180910390a3610bf8848484610ea6565b50505050565b610c06610722565b73ffffffffffffffffffffffffffffffffffffffff16610c246104c2565b73ffffffffffffffffffffffffffffffffffffffff1614610c7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7190611730565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ceb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce29061179c565b60405180910390fd5b610cf760008383610ea1565b8060026000828254610d099190611246565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d5e9190611246565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dc3919061107b565b60405180910390a3610dd760008383610ea6565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ee5578082015181840152602081019050610eca565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f0d82610eab565b610f178185610eb6565b9350610f27818560208601610ec7565b610f3081610ef1565b840191505092915050565b60006020820190508181036000830152610f558184610f02565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8d82610f62565b9050919050565b610f9d81610f82565b8114610fa857600080fd5b50565b600081359050610fba81610f94565b92915050565b6000819050919050565b610fd381610fc0565b8114610fde57600080fd5b50565b600081359050610ff081610fca565b92915050565b6000806040838503121561100d5761100c610f5d565b5b600061101b85828601610fab565b925050602061102c85828601610fe1565b9150509250929050565b60008115159050919050565b61104b81611036565b82525050565b60006020820190506110666000830184611042565b92915050565b61107581610fc0565b82525050565b6000602082019050611090600083018461106c565b92915050565b6000806000606084860312156110af576110ae610f5d565b5b60006110bd86828701610fab565b93505060206110ce86828701610fab565b92505060406110df86828701610fe1565b9150509250925092565b600060ff82169050919050565b6110ff816110e9565b82525050565b600060208201905061111a60008301846110f6565b92915050565b60006020828403121561113657611135610f5d565b5b600061114484828501610fab565b91505092915050565b61115681610f82565b82525050565b6000602082019050611171600083018461114d565b92915050565b6000806040838503121561118e5761118d610f5d565b5b600061119c85828601610fab565b92505060206111ad85828601610fab565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111fe57607f821691505b602082108103611211576112106111b7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061125182610fc0565b915061125c83610fc0565b925082820190508082111561127457611273611217565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112d6602583610eb6565b91506112e18261127a565b604082019050919050565b60006020820190508181036000830152611305816112c9565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611368602683610eb6565b91506113738261130c565b604082019050919050565b600060208201905081810360008301526113978161135b565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006113fa602483610eb6565b91506114058261139e565b604082019050919050565b60006020820190508181036000830152611429816113ed565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061148c602283610eb6565b915061149782611430565b604082019050919050565b600060208201905081810360008301526114bb8161147f565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006114f8601d83610eb6565b9150611503826114c2565b602082019050919050565b60006020820190508181036000830152611527816114eb565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061158a602583610eb6565b91506115958261152e565b604082019050919050565b600060208201905081810360008301526115b98161157d565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061161c602383610eb6565b9150611627826115c0565b604082019050919050565b6000602082019050818103600083015261164b8161160f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116ae602683610eb6565b91506116b982611652565b604082019050919050565b600060208201905081810360008301526116dd816116a1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061171a602083610eb6565b9150611725826116e4565b602082019050919050565b600060208201905081810360008301526117498161170d565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611786601f83610eb6565b915061179182611750565b602082019050919050565b600060208201905081810360008301526117b581611779565b905091905056fea2646970667358221220bfbef0c1f7cf4bbe1eba5f71ec3b37b21ddcecca20257c6ba779c9ef65a13c1b64736f6c63430008110033",
            "calldata": "40c10f190000000000000000000000006daab0f26f9efc44718fcfb2e90291e19b2f81ce0000000000000000000000000000000000000000000000000000000000002710",
            "calldata2": "70a082310000000000000000000000006daab0f26f9efc44718fcfb2e90291e19b2f81ce",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000042",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000042",
        },
        "id": "full_erc20_transfer_owner",
    },
    {
        "params": {
            "code": "608060405234801561001057600080fd5b5060405160208061021783398101604090815290516000818155338152600160205291909120556101d1806100466000396000f3006080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166318160ddd811461005b57806370a0823114610082578063a9059cbb146100b0575b600080fd5b34801561006757600080fd5b506100706100f5565b60408051918252519081900360200190f35b34801561008e57600080fd5b5061007073ffffffffffffffffffffffffffffffffffffffff600435166100fb565b3480156100bc57600080fd5b506100e173ffffffffffffffffffffffffffffffffffffffff60043516602435610123565b604080519115158252519081900360200190f35b60005490565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b600073ffffffffffffffffffffffffffffffffffffffff8316151561014757600080fd5b3360009081526001602052604090205482111561016357600080fd5b503360009081526001602081905260408083208054859003905573ffffffffffffffffffffffffffffffffffffffff85168352909120805483019055929150505600a165627a7a72305820a5d999f4459642872a29be93a490575d345e40fc91a7cccb2cf29c88bcdaf3be00290000000000000000000000000000000000000000000000000000000000002710",
            "calldata": "a9059cbb000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000003e8",
            "calldata2": "70a082310000000000000000000000000000000000000000000000000000000000000002",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000042",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000042",
        },
        "id": "constructor_test_erc20_transfer",
    },
    {
        "params": {
            "code": "608060405234801561001057600080fd5b5060405160208061021783398101604090815290516000818155338152600160205291909120556101d1806100466000396000f3006080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166318160ddd811461005b57806370a0823114610082578063a9059cbb146100b0575b600080fd5b34801561006757600080fd5b506100706100f5565b60408051918252519081900360200190f35b34801561008e57600080fd5b5061007073ffffffffffffffffffffffffffffffffffffffff600435166100fb565b3480156100bc57600080fd5b506100e173ffffffffffffffffffffffffffffffffffffffff60043516602435610123565b604080519115158252519081900360200190f35b60005490565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b600073ffffffffffffffffffffffffffffffffffffffff8316151561014757600080fd5b3360009081526001602052604090205482111561016357600080fd5b503360009081526001602081905260408083208054859003905573ffffffffffffffffffffffffffffffffffffffff85168352909120805483019055929150505600a165627a7a72305820a5d999f4459642872a29be93a490575d345e40fc91a7cccb2cf29c88bcdaf3be00290000000000000000000000000000000000000000000000000000000000002710",
            "calldata": "18160ddd",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000042",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000042",
        },
        "id": "constructor_test_erc20_total_supply",
    },
    {
        "params": {
            "code": "608060405234801561001057600080fd5b5060405160208061021783398101604090815290516000818155338152600160205291909120556101d1806100466000396000f3006080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166318160ddd811461005b57806370a0823114610082578063a9059cbb146100b0575b600080fd5b34801561006757600080fd5b506100706100f5565b60408051918252519081900360200190f35b34801561008e57600080fd5b5061007073ffffffffffffffffffffffffffffffffffffffff600435166100fb565b3480156100bc57600080fd5b506100e173ffffffffffffffffffffffffffffffffffffffff60043516602435610123565b604080519115158252519081900360200190f35b60005490565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b600073ffffffffffffffffffffffffffffffffffffffff8316151561014757600080fd5b3360009081526001602052604090205482111561016357600080fd5b503360009081526001602081905260408083208054859003905573ffffffffffffffffffffffffffffffffffffffff85168352909120805483019055929150505600a165627a7a72305820a5d999f4459642872a29be93a490575d345e40fc91a7cccb2cf29c88bcdaf3be00290000000000000000000000000000000000000000000000000000000000002710",
            "calldata": "70a082310000000000000000000000000000000000000000000000000000000000000001",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000042",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000042",
        },
        "id": "constructor_test_erc20_balance_of",
    },
    {
        "params": {
            "code": "604260005260206000F3",
            "calldata": "0xa9059cbb0000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc400000000000000000000000000000000000000000000000000000000000003e8",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000042",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000042",
        },
        "id": "constructor_test",
    },
    {
        "params": {
            "code": "0000",
            "calldata": "608060405234801561001057600080fd5b5060405160208061021783398101604090815290516000818155338152600160205291909120556101d1806100466000396000f3006080604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166318160ddd811461005b57806370a0823114610082578063a9059cbb146100b0575b600080fd5b34801561006757600080fd5b506100706100f5565b60408051918252519081900360200190f35b34801561008e57600080fd5b5061007073ffffffffffffffffffffffffffffffffffffffff600435166100fb565b3480156100bc57600080fd5b506100e173ffffffffffffffffffffffffffffffffffffffff60043516602435610123565b604080519115158252519081900360200190f35b60005490565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b600073ffffffffffffffffffffffffffffffffffffffff8316151561014757600080fd5b3360009081526001602052604090205482111561016357600080fd5b503360009081526001602081905260408083208054859003905573ffffffffffffffffffffffffffffffffffffffff85168352909120805483019055929150505600a165627a7a72305820a5d999f4459642872a29be93a490575d345e40fc91a7cccb2cf29c88bcdaf3be00290000000000000000000000000000000000000000000000000000000000002710",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000042",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000042",
        },
        "id": "return",
    },
    {
        "params": {
            "code": "60016001f3",
            "calldata": "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000000",
            "return_value": "0000000000000000000000000000000000000000000000000000000000000000",
        },
        "id": "return3",
    },
    {
        "params": {
            "code": "60056003600039",
            "calldata": "",
            "stack": "",
            "memory": "0360003900000000000000000000000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "codecopy",
    },
    {
        "params": {
            "code": "7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6008601f600039",
            "calldata": "",
            "stack": "1766847064778384329583297500742918515827483896875618958121606201292619775",
            "memory": "6008601f60003900000000000000000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "codecopy2",
    },
    {
        "params": {
            "code": "6003600401600a02608c036102bc04604605600d066010076005600608601060020960040A60600B00",
            "calldata": "",
            "stack": "16",
            "memory": "",
            "return_value": "",
        },
        "id": "Arithmetic operations",
    },
    {
        "params": {
            "code": "60018060036004600260058300",
            "calldata": "",
            "stack": "1,1,3,4,2,5,3",
            "memory": "",
            "return_value": "",
        },
        "id": "Duplication operations",
    },
    {
        "params": {
            "code": "600160001d",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101001d",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "600060011d",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7f400000000000000000000000000000000000000000000000000000000000000060fe1d",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f81d",
            "calldata": "",
            "stack": "127",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60fe1d",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff1d",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101001d",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "600160011d",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7f800000000000000000000000000000000000000000000000000000000000000060011d",
            "calldata": "",
            "stack": "86844066927987146567678238756515930889952488499230423029593188005934847229952",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "7f800000000000000000000000000000000000000000000000000000000000000060ff1d",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7f80000000000000000000000000000000000000000000000000000000000000006101001d",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7f80000000000000000000000000000000000000000000000000000000000000006101011d",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001d",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60011d",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff1d",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SAR",
    },
    {
        "params": {
            "code": "600160001b",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHL",
    },
    {
        "params": {
            "code": "600060011b",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHL",
    },
    {
        "params": {
            "code": "7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60011b",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639934",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHL",
    },
    {
        "params": {
            "code": "600160011b",
            "calldata": "",
            "stack": "2",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHL",
    },
    {
        "params": {
            "code": "600160ff1b",
            "calldata": "",
            "stack": "57896044618658097711785492504343953926634992332820282019728792003956564819968",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHL",
    },
    {
        "params": {
            "code": "60016101001b",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHL",
    },
    {
        "params": {
            "code": "60016101011b",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHL",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHL",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60011b",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639934",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHL",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff1b",
            "calldata": "",
            "stack": "57896044618658097711785492504343953926634992332820282019728792003956564819968",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHL",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101001b",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHL",
    },
    {
        "params": {
            "code": "600160001c",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101001c",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "600060011c",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "600160011c",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "7f800000000000000000000000000000000000000000000000000000000000000060011c",
            "calldata": "",
            "stack": "28948022309329048855892746252171976963317496166410141009864396001978282409984",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "7f800000000000000000000000000000000000000000000000000000000000000060ff1c",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "7f80000000000000000000000000000000000000000000000000000000000000006101001c",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "7f80000000000000000000000000000000000000000000000000000000000000006101011c",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001c",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60011c",
            "calldata": "",
            "stack": "57896044618658097711785492504343953926634992332820282019728792003956564819967",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60ff1c",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SHR",
    },
    {
        "params": {
            "code": "6005600516",
            "calldata": "",
            "stack": "5",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - AND",
    },
    {
        "params": {
            "code": "600a600a146009600a14",
            "calldata": "",
            "stack": "1,0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - EQ",
    },
    {
        "params": {
            "code": "600a600a116009600a11",
            "calldata": "",
            "stack": "0,1",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - GT",
    },
    {
        "params": {
            "code": "600015",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - ISZERO",
    },
    {
        "params": {
            "code": "600a600910600a600a10",
            "calldata": "",
            "stack": "1,0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - LT",
    },
    {
        "params": {
            "code": "600019",
            "calldata": "",
            "stack": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - NOT",
    },
    {
        "params": {
            "code": "6005600317",
            "calldata": "",
            "stack": "7",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - OR",
    },
    {
        "params": {
            "code": "60ff600113",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SGT",
    },
    {
        "params": {
            "code": "60ff600112",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Comparison & bitwise logic operations - SLT",
    },
    {
        "params": {
            "code": "600360026001916004929200",
            "calldata": "",
            "stack": "1,2,3,4",
            "memory": "",
            "return_value": "",
        },
        "id": "Exchange operations",
    },
    {
        "params": {
            "code": "60016101023800",
            "calldata": "",
            "stack": "1,258,7",
            "memory": "",
            "return_value": "",
        },
        "id": "Environmental information",
    },
    {
        "params": {
            "code": "600160024600",
            "calldata": "",
            "stack": "1,2,1263227476",
            "memory": "",
            "return_value": "",
        },
        "id": "Block information CHAINID",
    },
    {
        "params": {
            "code": "4100",
            "calldata": "",
            "stack": "1598625851760128517552627854997699631064626954749952456622017584404508471300",
            "memory": "",
            "return_value": "",
        },
        "id": "Block information COINBASE",
    },
    {
        "params": {
            "code": "60016002FE",
            "calldata": "",
            "stack": "1,2",
            "memory": "",
            "return_value": "",
        },
        "id": "System operations INVALID",
        "marks": pytest.mark.xfail,
    },
    {
        "params": {
            "code": "4300",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Block information NUMBER",
    },
    {
        "params": {
            "code": "4200",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Block information TIMESTAMP",
    },
    {
        "params": {
            "code": "3200",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Origin Address",
    },
    {
        "params": {
            "code": "3300",
            "calldata": "",
            "stack": "1",
            "memory": "",
            "return_value": "",
        },
        "id": "Caller Address",
    },
    {
        "params": {
            "code": "610100600052602060002000",
            "calldata": "",
            "stack": "31605475728638136284098257830937953109142906242585568807375082376557418698875",
            "memory": "0000000000000000000000000000000000000000000000000000000000000100",
            "return_value": "",
        },
        "id": "Hash 32 bytes",
        "marks": pytest.mark.sha3,
    },
    {
        "params": {
            "code": "60106000526001601f2000",
            "calldata": "",
            "stack": "68071607937700842810429351077030899797510977729217708600998965445571406158526",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010",
            "return_value": "",
        },
        "id": "Hash 1 byte with offset 1f",
        "marks": pytest.mark.sha3,
    },
    {
        "params": {
            "code": "6010600052600160002000",
            "calldata": "",
            "stack": "85131057757245807317576516368191972321038229705283732634690444270750521936266",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010",
            "return_value": "",
        },
        "id": "Hash 1 byte no offset",
        "marks": pytest.mark.sha3,
    },
    {
        "params": {
            "code": "6010600052600760002000",
            "calldata": "",
            "stack": "101225983456080153511598605893998939348063346639131267901574990367534118792751",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010",
            "return_value": "",
        },
        "id": "Hash 7 bytes",
        "marks": pytest.mark.sha3,
    },
    {
        "params": {
            "code": "6010600052600860002000",
            "calldata": "",
            "stack": "500549258012437878224561338362079327067368301550791134293299473726337612750",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010",
            "return_value": "",
        },
        "id": "Hash 8 bytes",
        "marks": pytest.mark.sha3,
    },
    {
        "params": {
            "code": "6010600052600960002000",
            "calldata": "",
            "stack": "78337347954576241567341556127836028920764967266964912349540464394612926403441",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010",
            "return_value": "",
        },
        "id": "Hash 9 bytes",
        "marks": pytest.mark.sha3,
    },
    {
        "params": {
            "code": "6010600052601160002000",
            "calldata": "",
            "stack": "41382199742381387985558122494590197322490258008471162768551975289239028668781",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010",
            "return_value": "",
        },
        "id": "Hash 17 bytes",
        "marks": pytest.mark.sha3,
    },
    {
        "params": {
            "code": "4500",
            "calldata": "",
            "stack": "1000000",
            "memory": "",
            "return_value": "",
        },
        "id": "Gas Limit",
    },
    {
        "params": {
            "code": "3d00",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Get the size of return data - 0x3d RETURNDATASIZE",
    },
    {
        "params": {
            "code": "600a4400",
            "calldata": "",
            "stack": "10,0",
            "memory": "",
            "return_value": "",
        },
        "id": "Load Word from Memory",
    },
    {
        "params": {
            "code": "600a4800",
            "calldata": "",
            "stack": "10,10",
            "memory": "",
            "return_value": "",
        },
        "id": "Load Word from Memory",
        "marks": pytest.mark.skip("Returned stack is 10,0 instead of 10,10"),
    },
    {
        "params": {
            "code": "600035",
            "calldata": "000000000000000000000000000000000000000000000000000000000000000a",
            "stack": "10",
            "memory": "",
            "return_value": "",
        },
        "id": "Load CallData onto the Stack - 0x35 CALLDATALOAD",
    },
    {
        "params": {
            "code": "3600",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Get the size of calldata - 0x36 CALLDATASIZE",
    },
    {
        "params": {
            "code": "60013100",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Balance",
    },
    {
        "params": {
            "code": "600a60005200",
            "calldata": "",
            "stack": "",
            "memory": "000000000000000000000000000000000000000000000000000000000000000a",
            "return_value": "",
        },
        "id": "Memory operations",
    },
    {
        "params": {
            "code": "600a60005260fa60245200",
            "calldata": "",
            "stack": "",
            "memory": "000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000fa00000000000000000000000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "Memory operations",
        "marks": pytest.mark.skip("Returned memory missed the last empty bytes32"),
    },
    {
        "params": {
            "code": "58600158",
            "calldata": "",
            "stack": "0,1,3",
            "memory": "",
            "return_value": "",
        },
        "id": "Memory operation - PC",
    },
    {
        "params": {
            "code": "5900",
            "calldata": "",
            "stack": "0",
            "memory": "",
            "return_value": "",
        },
        "id": "Get Memory Size",
    },
    {
        "params": {
            "code": "600a600052600051",
            "calldata": "",
            "stack": "10",
            "memory": "000000000000000000000000000000000000000000000000000000000000000a",
            "return_value": "",
        },
        "id": "Load Word from Memory",
    },
    {
        "params": {
            "code": "5860015b6001600158",
            "calldata": "",
            "stack": "0,1,1,1,8",
            "memory": "",
            "return_value": "",
        },
        "id": "Jumpdest opcode",
    },
    {
        "params": {
            "code": "600556600a5b600b",
            "calldata": "",
            "stack": "11",
            "memory": "",
            "return_value": "",
        },
        "id": "JUMP opcode",
        "marks": pytest.mark.skip("Returned stack is 10,11 instead of 11"),
    },
    {
        "params": {
            "code": "6001600757600a5b600a6000600857600a01",
            "calldata": "",
            "stack": "20",
            "memory": "",
            "return_value": "",
        },
        "id": "JUMP if condition is met",
        "marks": pytest.mark.skip("Returned stack is 10,20 instead of 20"),
    },
    {
        "params": {
            "code": "601160405200",
            "calldata": "",
            "stack": "",
            "memory": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011",
            "return_value": "",
        },
        "id": "Memory operations - Check very large offsets",
    },
    {
        "params": {
            "code": "6011604052602260405200",
            "calldata": "",
            "stack": "",
            "memory": "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022",
            "return_value": "",
        },
        "id": "Memory operations - Check Colliding offsets",
    },
    {
        "params": {
            "code": "7d111111111111111111111111111111111111111111111111111111111111600052",
            "calldata": "",
            "stack": "",
            "memory": "0000111111111111111111111111111111111111111111111111111111111111",
            "return_value": "",
        },
        "id": "Memory operations - Check saving memory with 30 bytes",
    },
    {
        "params": {
            "code": "7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff604052601160355200",
            "calldata": "",
            "stack": "",
            "memory": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011ffffffffffffffffffffff",
            "return_value": "",
        },
        "id": "Memory operations - Check saving memory in between an already saved memory location",
    },
    {
        "params": {
            "code": "611122600353",
            "calldata": "",
            "stack": "",
            "memory": "0000002200000000000000000000000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "Memory operations - Check saving memory in between an already saved memory location",
    },
    {
        "params": {
            "code": "7f111111111111111111111111111111111111111111111111111111111111111160005261222260055300",
            "calldata": "",
            "stack": "",
            "memory": "1111111111221111111111111111111111111111111111111111111111111111",
            "return_value": "",
        },
        "id": "Memory operations - Check saving memory in between an already saved memory location",
    },
    {
        "params": {
            "code": "6020600560063700",
            "calldata": "00112233445566778899aabbcceeddff",
            "stack": "",
            "memory": "0000000000005566778899aabbcceeddff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "calldatacopy",
    },
    {
        "params": {
            "code": "7f00112233445566778899aabbccddeeff00112233445566778899aabbccddeeff60005260106003600337",
            "calldata": "11111111111111111111111111111111111111111111111111111111111111111111",
            "stack": "",
            "memory": "0011221111111111111111111111111111111133445566778899aabbccddeeff",
            "return_value": "",
        },
        "id": "calldatacopy1",
    },
    {
        "params": {
            "code": "60246005600037",
            "calldata": "00112233445566778899aabbcceeddff00112233445566778899aabbccddeeff",
            "stack": "",
            "memory": "5566778899aabbcceeddff00112233445566778899aabbccddeeff00000000000000000000000000000000000000000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "calldatacopy2",
    },
    {
        "params": {
            "code": "60206005600037",
            "calldata": "00112233445566778899aabbcceeddff00112233445566778899aabbccddeeff00112233445566778899aabbccddeeff",
            "stack": "",
            "memory": "5566778899aabbcceeddff00112233445566778899aabbccddeeff0011223344",
            "return_value": "",
        },
        "id": "calldatacopy3",
    },
    {
        "params": {
            "code": "60406003600037",
            "calldata": "00112233445566778899aabbcceeddff00112233445566778899aabbccddeeff00112233445566778899aabbccddeeff",
            "stack": "",
            "memory": "33445566778899aabbcceeddff00112233445566778899aabbccddeeff00112233445566778899aabbccddeeff00000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "calldatacopy4",
    },
    {
        "params": {
            "code": "60106005600037",
            "calldata": "00112233445566778899aabbcceeddff00112233445566778899aabbccddeeff",
            "stack": "",
            "memory": "5566778899aabbcceeddff001122334400000000000000000000000000000000",
            "return_value": "",
        },
        "id": "calldatacopy5",
    },
    {
        "params": {
            "code": "60106000526001601fA000",
            "calldata": "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010",
            "return_value": "",
            "events": [[[], [0x10]]],
        },
        "id": "PRElog0",
    },
    {
        "params": {
            "code": "601060005260016022A000",
            "calldata": "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010000000",
            "return_value": "",
            "events": [[[], [0x00]]],
        },
        "id": "PRElog0-1",
    },
    {
        "params": {
            "code": "60106000527FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6001601fA100",
            "calldata": "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010",
            "return_value": "",
            "events": [
                [
                    [
                        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,
                        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,
                    ],
                    [0x10],
                ]
            ],
        },
        "id": "PRElog1",
    },
    {
        "params": {
            "code": "601060005260FF60016022A100",
            "calldata": "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010000000",
            "return_value": "",
            "events": [[[0xFF, 0x00], [0x00]]],
        },
        "id": "PRElog1-1",
    },
    {
        "params": {
            "code": "60106000527FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60FF6001601fA200",
            "calldata": "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010",
            "return_value": "",
            "events": [
                [
                    [
                        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,
                        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,
                        0xFF,
                        0x00,
                    ],
                    [0x10],
                ]
            ],
        },
        "id": "PRElog2",
    },
    {
        "params": {
            "code": "6010600052600060FF60016022A200",
            "calldata": "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010000000",
            "return_value": "",
            "events": [[[0x00, 0x00, 0xFF, 0x00], [0x00]]],
        },
        "id": "PRElog2-1",
    },
    {
        "params": {
            "code": "601060005260AB7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60FF6001601fA300",
            "calldata": "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010",
            "return_value": "",
            "events": [
                [
                    [
                        0xAB,
                        0x00,
                        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,
                        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,
                        0xFF,
                        0x00,
                    ],
                    [0x10],
                ]
            ],
        },
        "id": "PRElog3",
    },
    {
        "params": {
            "code": "601060005260AB600060FF60016022A300",
            "calldata": "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010000000",
            "return_value": "",
            "events": [[[0xAB, 0x00, 0x00, 0x00, 0xFF, 0x00], [0x00]]],
        },
        "id": "PRElog3-1",
    },
    {
        "params": {
            "code": "6010600052600860AB7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF60FF6001601fA400",
            "calldata": "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010",
            "return_value": "",
            "events": [
                [
                    [
                        0x08,
                        0x00,
                        0xAB,
                        0x00,
                        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,
                        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,
                        0xFF,
                        0x00,
                    ],
                    [0x10],
                ]
            ],
        },
        "id": "PRElog4",
    },
    {
        "params": {
            "code": "6010600052600860AB600060FF60016022A400",
            "calldata": "",
            "stack": "",
            "memory": "0000000000000000000000000000000000000000000000000000000000000010000000",
            "return_value": "",
            "events": [[[0x08, 0x00, 0xAB, 0x00, 0x00, 0x00, 0xFF, 0x00], [0x00]]],
        },
        "id": "PRElog4-1",
    },
    {
        "params": {
            "code": "60026000600039",
            "calldata": "",
            "stack": "",
            "memory": "6002000000000000000000000000000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "Environment Information - CODECOPY (0x39) - code slice within bounds, memory offset > len with tail padding",
    },
    {
        "params": {
            "code": "7d00112233445566778899aabbccddeeff00112233445566778899aabbccdd60005260086003600139",
            "calldata": "",
            "stack": "",
            "memory": "002233445566778899778899aabbccddeeff00112233445566778899aabbccdd",
            "return_value": "",
        },
        "id": "Environmental Information - CODECOPY (0x39) - code slice within bounds, memory copy within bounds",
    },
    {
        "params": {
            "code": "7d00112233445566778899aabbccddeeff00112233445566778899aabbccdd60005260206003600139",
            "calldata": "",
            "stack": "",
            "memory": "002233445566778899aabbccddeeff00112233445566778899aabbccdd6000526000000000000000000000000000000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "Environmental Information - CODECOPY (0x39) - code slice within bounds, memory offset < len < offset + size",
    },
    {
        "params": {
            "code": "60386002600339",
            "calldata": "",
            "stack": "",
            "memory": "00000060026003390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "Environmental Information - CODECOPY (0x39) - code with padding + memory offset > len ",
    },
    {
        "params": {
            "code": "7d00112233445566778899aabbccddeeff00112233445566778899aabbccdd60005260056065600439",
            "calldata": "",
            "stack": "",
            "memory": "000000110000000000778899aabbccddeeff00112233445566778899aabbccdd",
            "return_value": "",
        },
        "id": "Environmental Information - CODECOPY (0x39) - code offset > len, memory offset + size < len",
    },
    {
        "params": {
            "code": "7dFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7F0000000000000000000000000000000000000000000000000000000000000000505060326000600039",
            "calldata": "",
            "stack": "",
            "memory": "7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "Environment Information - CODECOPY (0x39) - evmcode example 1",
    },
    {
        "params": {
            "code": "7dFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7F00000000000000000000000000000000000000000000000000000000000000005050603260006000396008601f600039",
            "calldata": "",
            "stack": "",
            "memory": "7f00000000000000ffffffffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000",
            "return_value": "",
        },
        "id": "Environment Information - CODECOPY (0x39) - evmcode example 1+2",
    },
]


params = [pytest.param(case.pop("params"), **case) for case in test_cases]


@pytest.mark.asyncio
class TestZkEVM:
    @staticmethod
    def int_to_uint256(value):
        low = value & ((1 << 128) - 1)
        high = value >> 128
        return low, high

    @pytest.mark.parametrize(
        "params",
        params,
    )
    async def test_execute(self, zk_evm, params):
        Uint256 = zk_evm.struct_manager.get_contract_struct("Uint256")
        res = await zk_evm.execute(
            code=[int(b, 16) for b in wrap(params["code"], 2)],
            calldata=[int(b, 16) for b in wrap(params["calldata"], 2)],
        ).call(caller_address=1)
        assert res.result.stack == [
            Uint256(*self.int_to_uint256(int(s)))
            for s in (params["stack"].split(",") if params["stack"] else [])
        ]
        assert res.result.memory == [int(m, 16) for m in wrap(params["memory"], 2)]
        events = params.get("events")
        if events:
            assert [
                [
                    event.keys,
                    event.data,
                ]
                for event in sorted(res.call_info.events, key=lambda x: x.order)
            ] == events

    @pytest.mark.parametrize(
        "params",
        params[:1],
        # TODO: not sure how of those we want to re-run with the execute_at_address because it is very slow
        # TODO: This is a magic number.
    )
    async def test_execute_at_address(self,starknet: Starknet, zk_evm, params,contract_account_class: DeclaredClass):
        Uint256 = zk_evm.struct_manager.get_contract_struct("Uint256")
        # tx = await zk_evm.deploy(
        #     bytes=[int(b, 16) for b in wrap(params["code"], 2)],
        # ).execute(caller_address=1)
        # evm_contract_address = tx.result.evm_contract_address
        print("DEPLOYING CONTRACT")

        deployer_address = 0000000000000000000000000000000000000000
        res1 = await zk_evm.execute_at_address(
            address=deployer_address,
            calldata=[int(b, 16) for b in wrap(params["code"], 2)],
        ).execute(caller_address=1)

        #PRINTS
        evm_contract_address = res1.result.evm_contract_address
        starknet_contract_address = res1.result.starknet_contract_address
        stack = res1.result.stack
        memory = res1.result.memory

        print("CONTRACT DEPLOYED")
        print("EVM ADDRESS")
        print(evm_contract_address)
        print("STARKNET ADDRESS")
        print(starknet_contract_address)
        print("STACK")
        print(stack)
        print("MEMORY")
        print(memory)

        res2 = await zk_evm.initiate(
            evm_address=evm_contract_address,
            starknet_address=starknet_contract_address
        ).execute(caller_address=1)

        print("CONTRACT INITIATED")
        print(res2.result.evm_contract_address)
        print("CALLING TX")

        res3 = await zk_evm.execute_at_address(
            address=res2.result.evm_contract_address,
            calldata=[int(b, 16) for b in wrap(params["calldata"], 2)],
        ).execute(caller_address=1)

        print("CALLING SECOND TX")
        res4 = await zk_evm.execute_at_address(
            address=res2.result.evm_contract_address,
            calldata=[int(b, 16) for b in wrap(params["calldata2"], 2)],
        ).execute(caller_address=1)

        # account_contract = StarknetContract(
        #     starknet.state,
        #     contract_account_class.abi,
        #     starknet_contract_address,
        #     tx,
        # )
        # code = (await account_contract.code().call()).result.code
        # print("Contract Code")
        # print(code)


        # Have new calldata for contract call

        # res = await zk_evm.execute_at_address(
        #     address=evm_contract_address,
        #     calldata=[int(b, 16) for b in wrap(params["calldata"], 2)],
        # ).execute(caller_address=1)
        # assert res.result.stack == [
        #     Uint256(*self.int_to_uint256(int(s)))
        #     for s in (params["stack"].split(",") if params["stack"] else [])
        # ]
        # assert res.result.memory == [int(m, 16) for m in wrap(params["memory"], 2)]

    @pytest.mark.parametrize(
        "params",
        params[:2],
        # TODO: not sure how of those we want to re-run with the execute_at_address because it is very slow
        # TODO: This is a magic number.
    )
    async def test_execute_at_address2(self,starknet: Starknet, zk_evm, params,contract_account_class: DeclaredClass):
        Uint256 = zk_evm.struct_manager.get_contract_struct("Uint256")
        # tx = await zk_evm.deploy(
        #     bytes=[int(b, 16) for b in wrap(params["code"], 2)],
        # ).execute(caller_address=1)
        # evm_contract_address = tx.result.evm_contract_address
        print("DEPLOYING CONTRACT")

        deployer_address = 0000000000000000000000000000000000000000
        res1 = await zk_evm.execute_at_address(
            address=deployer_address,
            calldata=[int(b, 16) for b in wrap(params["code"], 2)],
        ).execute(caller_address=1)

        #PRINTS
        evm_contract_address = res1.result.evm_contract_address
        starknet_contract_address = res1.result.starknet_contract_address

        res2 = await zk_evm.initiate(
            evm_address=evm_contract_address,
            starknet_address=starknet_contract_address
        ).execute(caller_address=1)

        print("CONTRACT INITIATED")
        print(res2.result.evm_contract_address)
        print("CALLING MINT TX")

        res3 = await zk_evm.execute_at_address(
            address=res2.result.evm_contract_address,
            calldata=[int(b, 16) for b in wrap(params["mint"], 2)],
        ).execute(caller_address=2)

        print("CALLING APPROVE TX")
        res4 = await zk_evm.execute_at_address(
            address=res2.result.evm_contract_address,
            calldata=[int(b, 16) for b in wrap(params["approve"], 2)],
        ).execute(caller_address=2)

        # print("CALLING TRANSFERFROM TX")
        # res4 = await zk_evm.execute_at_address(
        #     address=res2.result.evm_contract_address,
        #     calldata=[int(b, 16) for b in wrap(params["transferFrom"], 2)],
        # ).execute(caller_address=1)

        # print("CALLING TRANSFERFROM TX")
        # res4 = await zk_evm.execute_at_address(
        #     address=res2.result.evm_contract_address,
        #     calldata=[int(b, 16) for b in wrap(params["balanceOf"], 2)],
        # ).execute(caller_address=1)


        # account_contract = StarknetContract(
        #     starknet.state,
        #     contract_account_class.abi,
        #     starknet_contract_address,
        #     tx,
        # )
        # code = (await account_contract.code().call()).result.code
        # print("Contract Code")
        # print(code)


        # Have new calldata for contract call

        # res = await zk_evm.execute_at_address(
        #     address=evm_contract_address,
        #     calldata=[int(b, 16) for b in wrap(params["calldata"], 2)],
        # ).execute(caller_address=1)
        # assert res.result.stack == [
        #     Uint256(*self.int_to_uint256(int(s)))
        #     for s in (params["stack"].split(",") if params["stack"] else [])
        # ]
        # assert res.result.memory == [int(m, 16) for m in wrap(params["memory"], 2)]

    async def test_deploy(
        self,
        starknet: Starknet,
        zk_evm: StarknetContract,
        contract_account_class: DeclaredClass,
    ):
        code = [1, 12312]
        tx = await zk_evm.deploy(bytes=code).execute(caller_address=1)
        starknet_contract_address = tx.result.starknet_contract_address
        account_contract = StarknetContract(
            starknet.state,
            contract_account_class.abi,
            starknet_contract_address,
            tx,
        )
        assert (await account_contract.code().call()).result.code == code





